@model GroupCapstone.Models.StoreInfo

@{
    ViewData["Title"] = "StoreInfo";
}

<h1>StoreInfo</h1>

<div>
    <h4>StoreInfo</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressCity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressCity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressZip)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressZip)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StoreHours)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StoreHours)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Logo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Logo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CompanyVision)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CompanyVision)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Latitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
    </dl>
</div>
<div id="map"></div>
<div>

    <a asp-action="Index">Back to List</a>
</div>

<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
    #map {
        width: 100%;
        height: 400px;
        background-color: grey;
    }
</style>

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script async defer src="@APIKEYS.GOOGLE_MAP"></script>
<script>

    function initMap() {
          const location = { lat:  @Html.DisplayFor(model => model.Latitude), lng: @Html.DisplayFor(model => model.Longitude) };
            const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 14,
            center: location,
            });
            const marker = new google.maps.Marker({
            position: location,
            map: map,
            });


    }
</script>

